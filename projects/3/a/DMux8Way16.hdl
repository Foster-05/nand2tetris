
/**
 * 8-way 16-bit demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way16 {
    IN in[16], sel[3];
    OUT a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16];

    PARTS:
    DMux16(in=in, sel=sel[2], a=abcd, b=efgh);

    DMux16(in=abcd, sel=sel[1], a=ab, b=cd);
    DMux16(in=efgh, sel=sel[1], a=ef, b= gh);

    DMux16(in=ab, sel=sel[0], a=a, b=b);
    DMux16(in=cd, sel=sel[0], a=c, b=d);
    
    DMux16(in=ef, sel=sel[0], a=e, b=f);
    DMux16(in=gh, sel=sel[0], a=g, b=h);
    
    
        
}
